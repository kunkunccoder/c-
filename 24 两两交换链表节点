/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(head==nullptr)
        {
            return head;
        }
        if(head->next==nullptr)
        {
            return head;
        }
        ListNode* n1=head->next;
        ListNode* n=head->next;
        ListNode* n2=n1->next;
        if(n2==nullptr)
        {
            n1->next=head;
            head->next=nullptr;
            return n;
        }
        else 
        {
            n1->next=head;
            head->next=n2;
            n1=head;
            head=head->next;
            n2=head->next;
        }
        while(n2&&n2->next)
        {
            n1->next=n2;
            //n2->next=head;
            head->next=n2->next;
            n2->next=head;
            n1=head;
            head=head->next;
            n2=head->next;
        }
        if(n2!=nullptr)
        {
            n1->next=n2;
            head->next=n2->next;
            n2->next=head;
            //head->next=n2->next;
        }
        return n;
    }
};
